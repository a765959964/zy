<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.zy.mapper.AgentMapper">
    
    <resultMap type="Agent" id="AgentResult">
        <result property="id"    column="id"    />
        <result property="agentName"    column="agent_name"    />
        <result property="agentCode"    column="agent_code"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="createUser"    column="create_user"    />
    </resultMap>

    <sql id="selectAgentVo">
        select id, agent_name, agent_code, status, create_time, create_user from b_agent
    </sql>

    <select id="selectAgentList" parameterType="Agent" resultMap="AgentResult">
        <include refid="selectAgentVo"/>
        <where>  
            <if test="agentName != null  and agentName != ''"> and agent_name like concat('%', #{agentName}, '%')</if>
            <if test="agentCode != null  and agentCode != ''"> and agent_code = #{agentCode}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
        </where>
    </select>


    <!-- 代理管理   -->
    <select id="getAgentList"  resultType="java.util.Map">
       SELECT
            t.id,
            t.agent_code agentCode,
            t.agent_name agentName,
            t.`status`,
            (
                ud.earnest_money - ud.receipt_amount
            ) money,
            t.create_user createUser,
            t.create_time createTime
        FROM
            b_agent t
        LEFT JOIN b_user_deposit ud ON t.agent_code = ud.agent
        <where>
            <if test="agentName != null  and agentName != ''"> and t.agent_name like concat('%', #{agentName}, '%')</if>
            <if test="agentCode != null  and agentCode != ''"> and t.agent_code = #{agentCode}</if>
            <if test="status != null  and status != ''"> and t.status = #{status}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
        </where>
    </select>

    
    <select id="selectAgentById" parameterType="Long" resultMap="AgentResult">
        <include refid="selectAgentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAgent" parameterType="Agent" useGeneratedKeys="true" keyProperty="id">
        insert into b_agent
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="agentName != null  and agentName != ''">agent_name,</if>
            <if test="agentCode != null  and agentCode != ''">agent_code,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="createUser != null  and createUser != ''">create_user,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="agentName != null  and agentName != ''">#{agentName},</if>
            <if test="agentCode != null  and agentCode != ''">#{agentCode},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="createUser != null  and createUser != ''">#{createUser},</if>
         </trim>
    </insert>

    <update id="updateAgent" parameterType="Agent">
        update b_agent
        <trim prefix="SET" suffixOverrides=",">
            <if test="agentName != null  and agentName != ''">agent_name = #{agentName},</if>
            <if test="agentCode != null  and agentCode != ''">agent_code = #{agentCode},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="createUser != null  and createUser != ''">create_user = #{createUser},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAgentById" parameterType="Long">
        delete from b_agent where id = #{id}
    </delete>

    <delete id="deleteAgentByIds" parameterType="String">
        delete from b_agent where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>